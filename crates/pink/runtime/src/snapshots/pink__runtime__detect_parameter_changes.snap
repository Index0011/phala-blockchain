---
source: crates/pink/runtime/src/runtime.rs
assertion_line: 156
expression: "(<PinkRuntime as frame_system::Config>::BlockWeights::get(),\n    <PinkRuntime as Config>::Schedule::get(),\n    <PinkRuntime as Config>::DefaultDepositLimit::get(),\n    <PinkRuntime as Config>::MaxCodeLen::get(),\n    <PinkRuntime as Config>::MaxStorageKeyLen::get())"
---
(
    BlockWeights {
        base_block: Weight {
            ref_time: 392184000,
            proof_size: 0,
        },
        max_block: Weight {
            ref_time: 2000000000000,
            proof_size: 18446744073709551615,
        },
        per_class: PerDispatchClass {
            normal: WeightsPerClass {
                base_extrinsic: Weight {
                    ref_time: 113638000,
                    proof_size: 0,
                },
                max_extrinsic: Some(
                    Weight {
                        ref_time: 1299886362000,
                        proof_size: 11990383647911208550,
                    },
                ),
                max_total: Some(
                    Weight {
                        ref_time: 1500000000000,
                        proof_size: 13835058055282163711,
                    },
                ),
                reserved: Some(
                    Weight {
                        ref_time: 0,
                        proof_size: 0,
                    },
                ),
            },
            operational: WeightsPerClass {
                base_extrinsic: Weight {
                    ref_time: 113638000,
                    proof_size: 0,
                },
                max_extrinsic: Some(
                    Weight {
                        ref_time: 1799886362000,
                        proof_size: 16602069666338596454,
                    },
                ),
                max_total: Some(
                    Weight {
                        ref_time: 2000000000000,
                        proof_size: 18446744073709551615,
                    },
                ),
                reserved: Some(
                    Weight {
                        ref_time: 500000000000,
                        proof_size: 4611686018427387904,
                    },
                ),
            },
            mandatory: WeightsPerClass {
                base_extrinsic: Weight {
                    ref_time: 113638000,
                    proof_size: 0,
                },
                max_extrinsic: None,
                max_total: None,
                reserved: None,
            },
        },
    },
    Schedule {
        limits: Limits {
            event_topics: 4,
            globals: 256,
            locals: 1024,
            parameters: 128,
            memory_pages: 64,
            table_size: 4096,
            br_table_size: 256,
            subject_len: 32,
            payload_len: 16384,
            runtime_memory: 2147483648,
        },
        instruction_weights: InstructionWeights {
            version: 4,
            fallback: 8000,
            i64const: 1468,
            i64load: 3401,
            i64store: 3077,
            select: 2033,
            r#if: 6113,
            br: 1589,
            br_if: 2431,
            br_table: 4798,
            br_table_per_entry: 42,
            call: 15983,
            call_indirect: 20313,
            call_per_local: 1243,
            local_get: 980,
            local_set: 2141,
            local_tee: 907,
            global_get: 6899,
            global_set: 7359,
            memory_current: 2279,
            memory_grow: 13181115,
            i64clz: 886,
            i64ctz: 798,
            i64popcnt: 797,
            i64eqz: 724,
            i64extendsi32: 918,
            i64extendui32: 872,
            i32wrapi64: 766,
            i64eq: 1554,
            i64ne: 1532,
            i64lts: 1565,
            i64ltu: 1564,
            i64gts: 1441,
            i64gtu: 1674,
            i64les: 1570,
            i64leu: 1658,
            i64ges: 1542,
            i64geu: 1574,
            i64add: 1445,
            i64sub: 1695,
            i64mul: 1353,
            i64divs: 7441,
            i64divu: 6212,
            i64rems: 7880,
            i64remu: 6336,
            i64and: 1244,
            i64or: 1344,
            i64xor: 1472,
            i64shl: 1442,
            i64shrs: 1706,
            i64shru: 1448,
            i64rotl: 1586,
            i64rotr: 1447,
        },
        host_fn_weights: HostFnWeights {
            caller: "339.9 ns, 6 bytes",
            is_contract: "3.3 µs, 2715 bytes",
            code_hash: "4.1 µs, 2719 bytes",
            own_code_hash: "409.9 ns, 6 bytes",
            caller_is_origin: "165.8 ns, 3 bytes",
            address: "332.3 ns, 6 bytes",
            gas_left: "328.9 ns, 6 bytes",
            balance: "1.4 µs, 6 bytes",
            value_transferred: "329.9 ns, 6 bytes",
            minimum_balance: "324.7 ns, 6 bytes",
            block_number: "344.5 ns, 6 bytes",
            now: "328.2 ns, 6 bytes",
            weight_to_fee: "1.3 µs, 10 bytes",
            gas: "133.6 ns, 0 bytes",
            input: "267.3 ns, 6 bytes",
            input_per_byte: "587 ps, 0 bytes",
            r#return: "1.7 µs, 45 bytes",
            return_per_byte: "177 ps, 0 bytes",
            terminate: "110.8 µs, 7781 bytes",
            random: "1.8 µs, 10 bytes",
            deposit_event: "3.5 µs, 10 bytes",
            deposit_event_per_topic: "2.2 µs, 2508 bytes",
            deposit_event_per_byte: "583 ps, 0 bytes",
            debug_message: "230.3 ns, 7 bytes",
            debug_message_per_byte: "731 ps, 0 bytes",
            set_storage: "6.0 µs, 293 bytes",
            set_storage_per_new_byte: "410 ps, 0 bytes",
            set_storage_per_old_byte: "27 ps, 1 bytes",
            set_code_hash: "21.4 µs, 3090 bytes",
            clear_storage: "5.9 µs, 289 bytes",
            clear_storage_per_byte: "74 ps, 1 bytes",
            contains_storage: "4.7 µs, 289 bytes",
            contains_storage_per_byte: "99 ps, 1 bytes",
            get_storage: "4.9 µs, 297 bytes",
            get_storage_per_byte: "717 ps, 1 bytes",
            take_storage: "6.2 µs, 297 bytes",
            take_storage_per_byte: "667 ps, 1 bytes",
            transfer: "35.1 µs, 2520 bytes",
            call: "209.4 µs, 2732 bytes",
            delegate_call: "205.6 µs, 2572 bytes",
            call_transfer_surcharge: "34.7 µs, 5154 bytes",
            call_per_cloned_byte: "591 ps, 0 bytes",
            instantiate: "341.4 µs, 5205 bytes",
            instantiate_transfer_surcharge: "115.2 µs, 2634 bytes",
            instantiate_per_input_byte: "1.1 ns, 0 bytes",
            instantiate_per_salt_byte: "1.3 ns, 0 bytes",
            hash_sha2_256: "572.3 ns, 8 bytes",
            hash_sha2_256_per_byte: "3.9 ns, 0 bytes",
            hash_keccak_256: "733.9 ns, 8 bytes",
            hash_keccak_256_per_byte: "3.1 ns, 0 bytes",
            hash_blake2_256: "413.3 ns, 8 bytes",
            hash_blake2_256_per_byte: "908 ps, 0 bytes",
            hash_blake2_128: "410.2 ns, 8 bytes",
            hash_blake2_128_per_byte: "911 ps, 0 bytes",
            ecdsa_recover: "36.7 µs, 77 bytes",
            ecdsa_to_eth_address: "9.2 µs, 42 bytes",
            sr25519_verify: "47.5 µs, 112 bytes",
            sr25519_verify_per_byte: "4.7 ns, 1 bytes",
            reentrance_count: "159.9 ns, 3 bytes",
            account_reentrance_count: "260.0 ns, 40 bytes",
            instantiation_nonce: "138.4 ns, 3 bytes",
        },
    },
    340282366920938463463374607431768211455,
    2097152,
    128,
)
